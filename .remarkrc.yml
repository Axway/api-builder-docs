plugins:
  - preset-lint-recommended
  - remark-preset-lint-markdown-style-guide
  # - remark-validate-links
  # - ['remark-lint-no-dead-urls', {
  #       'gotOptions': {
  #         'baseUrl': 'http://localhost:1313/'
  #       }
  #   }]
  # https://github.com/remarkjs/remark-lint/blob/main/doc/rules.md
  - [ 'remark-frontmatter', 'yaml' ]
  - [ 'remark-lint-heading-style', 'atx' ]
  - [ 'remark-lint-maximum-line-length', false ]
  - [ 'remark-lint-no-emphasis-as-heading' ]
  - [ 'remark-lint-no-file-name-irregular-characters', '\\.a-zA-Z0-9_']
  - [ 'remark-lint-emphasis-marker', '_' ]
  - [ 'remark-lint-unordered-list-marker-style', '*' ]
  - [ 'remark-lint-list-item-indent', 'space' ]
  - [ 'remark-lint-list-item-spacing', false ]
  - [ 'remark-lint-no-empty-sections' ]
  - [ 'remark-lint-no-tabs' ]
  - [ 'remark-lint-first-heading-level', 2 ]
  - [ 'remark-lint-heading-sentence-case', [
      'API Builder',
      'Axway',
      'APIs',
      'Swagger',
      'Gmail',
      'OneDrive',
      'Google',
      'Docker',
      'Splunk',
      'API',
      'ID',
      'GUID',
      'API Manager',
      'HTTP',
      'OpenAPI',
      'Endpoint',
      'encodeURI'
    ]]
  - [ 'remark-lint-prohibited-strings', [
      { no: 'Flow node', yes: 'Flow-node' },
      { no: 'flow node', yes: 'flow-node' },
      # { yes: 'flow-node' }, # case insensitive
      { no: 'Flow trigger', yes: 'Flow-trigger' },
      { no: 'flow trigger', yes: 'flow-trigger' },
      # { yes: 'flow-trigger' },  # case insensitive
      { yes: 'JavaScript' },
      { yes: 'Node.js' },
      { yes: 'npm' },
      { yes: 'unix' },
      { yes: 'GitHub' },
      { yes: 'Docker' },
      # the plugin doesn't handle regex too well, so wasn't able to use
      # negative lookbehind for use of 'builder' without preceding 'API'.
      # https://github.com/Trott/remark-lint-prohibited-strings/blob/main/index.js
      { no: 'builder', yes: 'Builder', ignoreNextTo: '-' },
      { yes: 'API Builder' }, # case insensitive
      { no: "can't", yes: 'cannot' },
      { no: "it's", yes: 'it is' },
      { no: "that's", yes: 'that is' },
      { no: "won't", yes: 'will not' },
      { no: "(\\w+)'ve", yes: '$1 have', replaceCaptureGroups: true },
      { no: "(\\w+(?<!ca))n't", yes: '$1 not', replaceCaptureGroups: true },
      { no: "(\\w+)'ll", yes: '$1 will', replaceCaptureGroups: true },
    ]]
