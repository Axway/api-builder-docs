{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "www.googleapis.com",
  "basePath": "/gmail/v1/users",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "Access Gmail mailboxes including sending user email.",
    "title": "Gmail",
    "version": "v1"
  },
  "externalDocs": {
    "url": "https://developers.google.com/gmail/api/"
  },
  "securityDefinitions": {
    "Oauth2": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "tokenUrl": "https://oauth2.googleapis.com/token",
      "description": "Oauth 2.0 authentication",
      "flow": "accessCode",
      "scopes": {
        "https://mail.google.com/": "Read, send, delete, and manage your email",
        "https://www.googleapis.com/auth/gmail.readonly": "View your email messages and settings"
      },
      "type": "oauth2"
    }
  },
  "tags": [
    {
      "name": "users"
    }
  ],
  "paths": {
    "/{userId}/messages": {
      "get": {
        "description": "Lists the messages in the user's mailbox.",
        "operationId": "gmail.users.messages.list",
        "parameters": [
          {
            "default": false,
            "description": "Include messages from SPAM and TRASH in the results.",
            "in": "query",
            "name": "includeSpamTrash",
            "type": "boolean"
          },
          {
            "default": 100,
            "description": "Maximum number of messages to return.",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "Page token to retrieve a specific page of results in the list.",
            "in": "query",
            "name": "pageToken",
            "type": "string"
          },
          {
            "description": "Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example, \"from:someuser@example.com rfc822msgid:<somemsgid@example.com> is:unread\". Parameter cannot be used when accessing the api using the gmail.metadata scope.",
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "default": "me",
            "description": "The user's email address. The special value me can be used to indicate the authenticated user.",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListMessagesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://mail.google.com/"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/gmail.readonly"
            ]
          }
        ],
        "tags": [
          "users"
        ]
      }
    }
  },
  "definitions": {
    "ListMessagesResponse": {
      "properties": {
        "messages": {
          "description": "List of messages.",
          "items": {
            "$ref": "#/definitions/Message"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results in the list.",
          "type": "string"
        },
        "resultSizeEstimate": {
          "description": "Estimated total number of results.",
          "format": "uint32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Message": {
      "description": "An email message.",
      "properties": {
        "historyId": {
          "description": "The ID of the last history record that modified this message.",
          "format": "uint64",
          "type": "string"
        },
        "id": {
          "description": "The immutable ID of the message.",
          "type": "string"
        },
        "internalDate": {
          "description": "The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.",
          "format": "int64",
          "type": "string"
        },
        "labelIds": {
          "description": "List of IDs of labels applied to this message.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/MessagePart",
          "description": "The parsed email structure in the message parts."
        },
        "raw": {
          "description": "The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.",
          "format": "byte",
          "type": "string"
        },
        "sizeEstimate": {
          "description": "Estimated size in bytes of the message.",
          "format": "int32",
          "type": "integer"
        },
        "snippet": {
          "description": "A short part of the message text.",
          "type": "string"
        },
        "threadId": {
          "description": "The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: \n- The requested threadId must be specified on the Message or Draft.Message you supply with your request. \n- The References and In-Reply-To headers must be set in compliance with the RFC 2822 standard. \n- The Subject headers must match.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MessagePart": {
      "description": "A single MIME message part.",
      "properties": {
        "body": {
          "$ref": "#/definitions/MessagePartBody",
          "description": "The message part body for this part, which may be empty for container MIME message parts."
        },
        "filename": {
          "description": "The filename of the attachment. Only present if this message part represents an attachment.",
          "type": "string"
        },
        "headers": {
          "description": "List of headers on this message part. For the top-level message part, representing the entire message payload, it will contain the standard RFC 2822 email headers such as To, From, and Subject.",
          "items": {
            "$ref": "#/definitions/MessagePartHeader"
          },
          "type": "array"
        },
        "mimeType": {
          "description": "The MIME type of the message part.",
          "type": "string"
        },
        "partId": {
          "description": "The immutable ID of the message part.",
          "type": "string"
        },
        "parts": {
          "description": "The child MIME message parts of this part. This only applies to container MIME message parts, for example multipart/*. For non- container MIME message part types, such as text/plain, this field is empty. For more information, see RFC 1521.",
          "items": {
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MessagePartBody": {
      "description": "The body of a single MIME message part.",
      "properties": {
        "attachmentId": {
          "description": "When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.",
          "type": "string"
        },
        "data": {
          "description": "The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.",
          "format": "byte",
          "type": "string"
        },
        "size": {
          "description": "Number of bytes for the message part data (encoding notwithstanding).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MessagePartHeader": {
      "properties": {
        "name": {
          "description": "The name of the header before the : separator. For example, To.",
          "type": "string"
        },
        "value": {
          "description": "The value of the header after the : separator. For example, someuser@example.com.",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}
